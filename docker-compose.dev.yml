version: '3.8'

services:
  # PostgreSQL database for development
  postgres:
    image: postgres:15-alpine
    container_name: baton-postgres-dev
    environment:
      - POSTGRES_DB=baton_dev
      - POSTGRES_USER=baton_user
      - POSTGRES_PASSWORD=baton_password
    volumes:
      - postgres_dev_data:/var/lib/postgresql/data
    networks:
      - baton-network
    ports:
      - "5432:5432"
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U baton_user -d baton_dev"]
      interval: 10s
      timeout: 5s
      retries: 5

  # Development backend with hot reload
  backend:
    build:
      context: ./backend
      dockerfile: Dockerfile.dev
      target: development
    container_name: baton-backend-dev
    ports:
      - "3001:3001"
      - "9229:9229" # Debug port
    environment:
      - NODE_ENV=development
      - DATABASE_URL=postgresql://baton_user:baton_password@postgres:5432/baton_dev
      - CLIENT_URL=http://localhost:5173
      - MCP_SERVER_PORT=3002
    volumes:
      - ./backend:/app
      - /app/node_modules
    command: ["npm", "run", "dev"]
    depends_on:
      postgres:
        condition: service_healthy
    networks:
      - baton-network

  # Development MCP Server with hot reload
  mcp-server:
    build:
      context: ./backend
      dockerfile: Dockerfile.dev
      target: development
    container_name: baton-mcp-server-dev
    ports:
      - "3002:3002"
    environment:
      - NODE_ENV=development
      - DATABASE_URL=postgresql://baton_user:baton_password@postgres:5432/baton_dev
      - MCP_TRANSPORT_MODE=websocket
      - MCP_SERVER_PORT=3002
    volumes:
      - ./backend:/app
      - /app/node_modules
    command: ["npm", "run", "mcp:websocket"]
    depends_on:
      postgres:
        condition: service_healthy
    networks:
      - baton-network

  # Development frontend with hot reload
  frontend:
    build:
      context: ./frontend
      dockerfile: Dockerfile.dev
      target: development
    container_name: baton-frontend-dev
    ports:
      - "5173:5173"
    environment:
      - VITE_API_URL=http://localhost:3001
    volumes:
      - ./frontend:/app
      - /app/node_modules
    command: ["npm", "run", "dev", "--", "--host", "0.0.0.0"]
    networks:
      - baton-network

  # Database migration service for development
  db-migrate:
    build:
      context: ./backend
      dockerfile: Dockerfile.dev
      target: development
    container_name: baton-db-migrate-dev
    environment:
      - DATABASE_URL=postgresql://baton_user:baton_password@postgres:5432/baton_dev
    networks:
      - baton-network
    command: ["dumb-init", "npx", "prisma", "migrate", "deploy"]
    depends_on:
      postgres:
        condition: service_healthy
    restart: "no"

  # Database seeding service for development
  db-seed:
    build:
      context: ./backend
      dockerfile: Dockerfile.dev
      target: development
    container_name: baton-db-seed-dev
    environment:
      - DATABASE_URL=postgresql://baton_user:baton_password@postgres:5432/baton_dev
    networks:
      - baton-network
    command: ["dumb-init", "npx", "prisma", "db", "seed"]
    depends_on:
      db-migrate:
        condition: service_completed_successfully
    restart: "no"

volumes:
  postgres_dev_data:

networks:
  baton-network: