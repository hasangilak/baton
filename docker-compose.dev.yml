version: '3.8'

services:
  # PostgreSQL database for development
  postgres:
    image: postgres:15-alpine
    container_name: baton-postgres-dev
    environment:
      - POSTGRES_DB=baton_dev
      - POSTGRES_USER=baton_user
      - POSTGRES_PASSWORD=baton_password
    volumes:
      - postgres_dev_data:/var/lib/postgresql/data
    networks:
      - baton-network
    ports:
      - "5432:5432"
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U baton_user -d baton_dev"]
      interval: 10s
      timeout: 5s
      retries: 5

  # Development backend with hot reload
  backend:
    build:
      context: ./backend
      dockerfile: Dockerfile.dev
      target: development
    container_name: baton-backend-dev
    ports:
      - "3001:3001"
      - "9229:9229" # Debug port
    environment:
      - NODE_ENV=development
      - DATABASE_URL=postgresql://baton_user:baton_password@postgres:5432/baton_dev
      - CLIENT_URL=http://localhost:5175
      - MCP_SERVER_PORT=3002
      - CHOKIDAR_USEPOLLING=true
    volumes:
      - ./backend:/app
      - /app/node_modules
      # Exclude files that don't need to be watched
      - /app/.git
      - /app/dist
    command: ["npm", "run", "dev"]
    depends_on:
      postgres:
        condition: service_healthy
    networks:
      - baton-network

  # Development MCP Server with hot reload
  mcp-server:
    build:
      context: ./backend
      dockerfile: Dockerfile.dev
      target: development
    container_name: baton-mcp-server-dev
    ports:
      - "3002:3002"
    environment:
      - NODE_ENV=development
      - DATABASE_URL=postgresql://baton_user:baton_password@postgres:5432/baton_dev
      - MCP_TRANSPORT_MODE=websocket
      - MCP_SERVER_PORT=3002
      - CHOKIDAR_USEPOLLING=true
    volumes:
      - ./backend:/app
      - /app/node_modules
      # Exclude files that don't need to be watched
      - /app/.git
      - /app/dist
    command: ["npm", "run", "mcp:dev:websocket"]
    depends_on:
      postgres:
        condition: service_healthy
    networks:
      - baton-network

  # Development frontend with hot reload
  frontend:
    build:
      context: ./frontend
      dockerfile: Dockerfile.dev
      target: development
    container_name: baton-frontend-dev
    ports:
      - "5173:5173"
      - "5176:5174"  # HMR WebSocket port
    environment:
      - VITE_API_URL=http://localhost:3001
      - CHOKIDAR_USEPOLLING=true
      - WATCHPACK_POLLING=true
    volumes:
      - ./frontend:/app
      - /app/node_modules
      # Exclude files that don't need to be watched
      - /app/.git
      - /app/dist
    user: root
    command: [
      "sh", "-c", 
      "echo 'ðŸ“¦ Installing dependencies...' && npm install && echo 'âœ… Dependencies installed!' && npm run dev -- --host 0.0.0.0"
    ]
    networks:
      - baton-network


volumes:
  postgres_dev_data:

networks:
  baton-network: