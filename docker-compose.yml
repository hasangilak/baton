version: '3.8'

services:
  # Backend service
  backend:
    build:
      context: ./backend
      dockerfile: Dockerfile
    container_name: baton-backend
    ports:
      - "3001:3001"
    environment:
      - NODE_ENV=production
      - DATABASE_URL=file:./data/baton.db
      - CLIENT_URL=http://localhost:5173
      - MCP_SERVER_PORT=3002
    volumes:
      - backend_data:/app/data
    networks:
      - baton-network
    healthcheck:
      test: ["CMD", "node", "-e", "require('http').get('http://localhost:3001/health', (res) => { process.exit(res.statusCode === 200 ? 0 : 1) })"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 40s
    restart: unless-stopped

  # Frontend service
  frontend:
    build:
      context: ./frontend
      dockerfile: Dockerfile
    container_name: baton-frontend
    ports:
      - "5173:80"
    environment:
      - NGINX_HOST=localhost
      - NGINX_PORT=80
    depends_on:
      backend:
        condition: service_healthy
    networks:
      - baton-network
    healthcheck:
      test: ["CMD", "wget", "--no-verbose", "--tries=1", "--spider", "http://localhost:80/health"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 10s
    restart: unless-stopped

  # Database migration service (runs once)
  db-migrate:
    build:
      context: ./backend
      dockerfile: Dockerfile
    container_name: baton-db-migrate
    environment:
      - DATABASE_URL=file:./data/baton.db
    volumes:
      - backend_data:/app/data
    networks:
      - baton-network
    command: ["dumb-init", "npx", "prisma", "migrate", "deploy"]
    depends_on:
      - backend
    restart: "no"

  # Optional: Database seeding service
  db-seed:
    build:
      context: ./backend
      dockerfile: Dockerfile
    container_name: baton-db-seed
    environment:
      - DATABASE_URL=file:./data/baton.db
    volumes:
      - backend_data:/app/data
    networks:
      - baton-network
    command: ["dumb-init", "npx", "prisma", "db", "seed"]
    depends_on:
      db-migrate:
        condition: service_completed_successfully
    restart: "no"
    profiles:
      - seed

volumes:
  backend_data:
    driver: local

networks:
  baton-network:
    driver: bridge